@page "/fetchdata"
@using CookingSuggester.Shared
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage

<PageTitle>@title</PageTitle>

@if (cooking == null)
{
    <p><em>ロード中...</em></p>
}
else
{
    <h2>@cooking.Name</h2>
    <h4>材料</h4>
    <div style="white-space: pre-line;margin-left: 0.5em">
        <span>
            @cooking.Materials.Replace(",", "\n")
        </span>
    </div>
    <br>
    <h4>手順</h4>
    <div style="white-space: pre-line;margin-left: 0.5em">
        <span>
            @cooking.Process.Replace("\\n", "\n")
        </span>
    </div>
}

@code {
    private string title = "ロード中";
    private Cooking? cooking;

    protected override async Task OnInitializedAsync()
    {
        var onDisplay = await SessionStorage.GetItemAsync<string>("onDisplay");
        if (string.IsNullOrWhiteSpace(onDisplay))
        {
            // 新規セッション
            var displayed = await LocalStorage.GetItemAsync<string>("displayed") ?? "";
            var count = await Http.GetFromJsonAsync<int>("Suggestion/count");
            if (count - displayed.Split(",").Distinct().Count() <= 0)
            {
                await LocalStorage.ClearAsync();
                displayed = "";
            }

            try
            {
                cooking = await (await Http.PostAsJsonAsync("Suggestion/exclude", displayed))
                    .Content.ReadAsAsync<Cooking>();
            }
            catch (ArgumentException)
            {
                await LocalStorage.ClearAsync();
                await OnInitializedAsync();
                return;
            }

            await AppendToLocalStorageAsync(cooking.Id);
            await SessionStorage.SetItemAsync<string>("onDisplay", cooking.Id.ToString());
        }
        else
        {
            // 既存セッション(リロード時)
            cooking = await Http.GetFromJsonAsync<Cooking>($"Suggestion/get/{onDisplay}");
        }

        title = cooking!.Name;
    }

    private async Task AppendToLocalStorageAsync(int id)
    {
        var displayed = await LocalStorage.GetItemAsync<string>("displayed") ?? "";
        displayed += $"{(string.IsNullOrWhiteSpace(displayed) ? "" : ",")}{id.ToString()}";
        await LocalStorage.SetItemAsync("displayed", displayed);
    }
}
